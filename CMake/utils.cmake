function(FindValidParameter __name __list __found __docstring)
	# Reset values to modify them
	unset(${__found} CACHE)
	list(FIND __list "${${__name}}" __found_internal)
	if(__found_internal EQUAL -1)
		set(${__found} OFF CACHE INTERNAL "" FORCE)
		list(GET __list 0 "${__name}")
	else()
		set(${__found} ON CACHE INTERNAL "" FORCE)
	endif(__found_internal EQUAL -1)
	set("${__name}" "${${__name}}" CACHE STRING "${__docstring}")
	set_property(CACHE ${__name} PROPERTY STRINGS "${__list}")
endfunction(FindValidParameter)

function(ReturnWithCode __message __code)
	file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/cmake.return" "${__code}")
	message(FATAL_ERROR "${__message}")
endfunction(ReturnWithCode __message __code)

function(SearchParameter __name __type __docstring)
	unset(__internal)
	unset(__internal CACHE)
	# Search if the variable is not already defined in cmake
	if(DEFINED "${__name}")
		set(__internal "${${__name}}")
		unset("${__name}" CACHE)
		set("${__name}" "${__internal}" CACHE "${__type}" "${__docstring}")
		return()
	endif(DEFINED "${__name}")
	# Search in environment variables
	if(DEFINED "ENV{${__name}}")
		set("${__name}" "$ENV{${__name}}" CACHE "${__type}" "${__docstring}")
		return()
	endif(DEFINED "ENV{${__name}}")
	unset(__internal)
	unset(__internal CACHE)
endfunction(SearchParameter)

function(FindProgram __variable __name_list __found __util_name)
	unset(${__found} CACHE)
	unset(__internal)
	unset(__internal CACHE)
	unset(${__variable} CACHE)
	set(${__found} OFF CACHE INTERNAL "")
	foreach(__name ${__name_list})
		find_program(__internal "${__name}")
		if(NOT "${__internal}" STREQUAL "__internal-NOTFOUND")
			unset(${__found} CACHE)
			set(${__found} ON CACHE INTERNAL "")
			set(${__variable} "${__internal}" CACHE INTERNAL "")
			message(STATUS "${__util_name} found : ${${__variable}}")
			break()
		endif(NOT "${__internal}" STREQUAL "__internal-NOTFOUND")
	endforeach(__name)
	if(NOT ${${__found}})
		message(STATUS "${__util_name} not found.")
	endif(NOT ${${__found}})
	unset(__internal)
	unset(__internal CACHE)
endfunction(FindProgram)
